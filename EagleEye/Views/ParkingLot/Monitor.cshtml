@model EagleEye.Views.ParkingLot.ParkingLot
@{
	Layout = "~/Views/ParkingLot/_ParkingLot.cshtml";
}
@section Buttons {
	<div class="panel panel-default">
		<div class="panel-heading">
			Debug
		</div>
		<div class="panel-body">
			<label>Partially Obstructed Threshold:</label>
			<input class="form-control" type="range" min="0" max="1" step=".01" id="partiallyObstructedThreshold" />
			<label>Obstructed Threshold:</label>
			<input class="form-control" type="range" min="0" max="1" step=".01" id="obstructedThreshold"/>
		</div>
	</div>
}
@section scripts {
	<script>
	let viewer = null;
	function updateViewer() {
		$.ajax({
			url: '/ParkingLot/Get',
			data: { id:@Model.ID}
		}).done(lot => {
			// Convert annotation points into Vector2 instances
			lot.Annotations.forEach(a => {
				let points = a.Points;
				a.Points = [];
				points.forEach(p => {
					a.Points.push(new Vector2(p.X, p.Y));
				})
			})
			if (viewer === null) {
				// create a new viewer
				viewer = new AnnotationViewer(lot, annotations, (self, ctx, annotation) => {
					if (annotation.PercentDifference > document.getElementById('obstructedThreshold').value) {
						ctx.fillStyle = 'rgba(255,0,0,0.5)';
					} else if (annotation.PercentDifference > document.getElementById('partiallyObstructedThreshold').value) {
						ctx.fillStyle = 'rgba(255,255,0,0.5)';
					} else {
						ctx.fillStyle = 'rgba(0,255,0,0.5)';
					}
				}, (self, ctx, point) => ctx.fillStyle = 'black');
				viewer.tick();
			} else {
				// update the existing viewer's lot
				viewer.lot = lot;
			}
			
			window.setTimeout(() => {
				updateViewer();
			}, 1000);
		});
	}
	updateViewer();
	</script>
}
<div id="viewport">
	<img id="baseline" />
	<canvas id="editor" />
</div>
