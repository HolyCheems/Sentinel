@model EagleEye.Views.ParkingLot.ParkingLot
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts {
	@Scripts.Render("~/bundles/parking")
	<script>
		let background = document.getElementById('baseline');
		let annotations = document.getElementById('editor');
		let viewport = document.getElementById('viewport');
		let form = document.getElementById('viewForm');
		function updateViewportSize() {
			let width = viewport.clientWidth;
			let ratio = background.naturalHeight / background.naturalWidth;
			let height = width * ratio;
			if (height > viewport.clientHeight) {
				height = viewport.clientHeight;
				ratio = background.naturalWidth / background.naturalHeight;
				width = height * ratio;
			}
			annotations.width = width;
			annotations.height = height;
			background.width = width;
			background.height = height;
		}
		window.addEventListener('resize', () => {
			updateViewportSize();
		})
		let backgroundRadio = form.elements['background'];
		let annotationCheck = form.elements['annotations'][0];
		let updateInterval = null;
		for (let i = 0; i < backgroundRadio.length; i++) {
			backgroundRadio[i].addEventListener('change', (evt) => {
				switch (backgroundRadio.value) {
					case 'baseline':
						displayBaseline();
						break;
					case 'feed':
						displayFeed();
						break;
					case 'none':
						displayNone();
						break;
				}
			});
		}
		

		annotationCheck.addEventListener('change', (evt) => {
			if (annotationCheck.checked) {
				annotations.classList.remove('hidden');
			} else {
				annotations.classList.add('hidden');
			}
		})
		function setBackground(base64data) {
			background.src = `data:image/png;base64, ${base64data}`;
			updateViewportSize();
		}
		function resetBackground() {
			if (updateInterval !== null) {
				window.clearInterval(updateInterval);
			}
			background.classList.remove('hidden');
		}
		function displayBaseline() {
			resetBackground();
			$.ajax({
				url: '/ParkingLot/Baseline',
				data: {id:@Model.ID}
			}).done(data => {
				setBackground(data);
			});
		}
		function displayNone() {
			resetBackground();
			background.classList.add('hidden');
		}

		function displayFeed() {
			resetBackground();
			updateInterval = window.setTimeout(() => {
				$.ajax({
					url: '/Camera/Get',
					data: {id:@Model.CameraID}
				}).done(data => {
					setBackground(data.CurrentImage);
					displayFeed();
				});
			},1000)
		}
		function updateBaseline() {
			$.ajax({
				url: '/ParkingLot/UpdateBaseline',
				data: {id:@Model.ID}
			}).done(data => {
				backgroundRadio.value = 'baseline';
				displayBaseline();
			});
		}
		backgroundRadio.value = 'baseline';
		displayBaseline();
		

	</script>
	@RenderSection("scripts",false)
}

<div class="container max-height">
	@*<div class="row">
		<div class="col col-sm-3">
			<h1 class="page-header">
				@Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
				@Model.Name
			</h1>
		</div>
		<div class="col col-sm-2">
			Total Spaces
		</div>
		<div class="col col-sm-2">
			0
		</div>
		<div class="col col-sm-2">
			Available
		</div>
		<div class="col col-sm-2">
			0
		</div>
		<div class="col col-sm-2">
			% Full
		</div>
		<div class="col col-sm-2">
			0
		</div>
	</div>*@
	<div class="row max-height">
		<div class="col col-sm-3 scrollable max-height">
			<h1 class="page-header">
				@Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
				@Model.Name
			</h1>
			@RenderSection("Buttons", false)
			<div class="panel panel-info">
				<div class="panel-heading">View</div>
				<div class="panel-body">
					<form id="viewForm">
						<label>Background:</label>
						<div class="form-group-sm">
							@Html.RadioButton("background", "baseline", true) <label>Baseline</label><br />
							@Html.RadioButton("background", "feed", false) <label>Camera feed</label><br />
							@Html.RadioButton("background", "none", true) <label>None</label><br />
							@Html.CheckBox("annotations", true) <label>Show Annotations</label>
						</div>
					</form>
				</div>
			</div>
		</div>
		<div class="col col-md-9 max-height">
			<div id="viewport" class="max-width max-height">
				<img id="baseline" />
				<canvas id="editor" />
			</div>
		</div>

	</div>
</div>

